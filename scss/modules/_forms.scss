// General

.form {
  &__group {
    margin-bottom: 1rem;
  }
}
form {
  .form {
    &__group {
      margin-bottom: 1rem;
      &:last-child {
        margin-bottom:0;
      }
    }
  }
}

input {
  &[type="text"], &[type="password"], &[type="number"], &[type="email"]{
    @extend %control;
    height: $base-h-control; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  }
}

textarea {
  @extend %control;
  resize: vertical;
  height: 96px;
}

// File

input[type="file"] {
  font-size: .875rem;
  color: transparentize($body-font-color, .5);
  display: block;
}

// Checkboxes and Radios

input[type=checkbox], input[type=radio] {
  background: #fff;
  -webkit-appearance: none;
  -moz-appearance: none;
  border-style: solid;
  border-width: 1px;
  border-color: $component-border-color;
  -webkit-box-shadow: none;
  box-shadow: none;
  height: ($base-h-padding * 1.5) + px;
  width: ($base-h-padding * 1.5) + px;
  vertical-align: bottom;
  margin: 0 $base-v-padding+px 0 0;
  outline: none!important;
  &:disabled {
    opacity: 0.5; }
  &:focus, &:active {
    background: $component-bg-color-active;
  }
  &:checked {
    background: $color-primary !important;
    -webkit-box-shadow: none;
    box-shadow: none;
    border: 1px solid transparent;
  }
}

input[type=checkbox] {
  @include radius($br-default);
  &:checked {
    &:after {
      display: block;
      position: relative;
      content: '';
      height: $base-v-padding / 2 + px;
      width: $base-h-padding * .625 + px;
      border-bottom: 4px solid #fff;
      border-left: 4px solid #fff;
      -webkit-transform: translate(4px, 6px) rotate(-45deg);
    }
  }
}

input[type=radio] {
  @include vendor-prefix(border-radius, 50%);
  &:checked {
    &:after {
      display: block;
      position: relative;
      content: '';
      left: 6px;
      top: 6px;
      height: 10px;
      width: 10px;
      border-radius: 100%;
      background: #fff;
    }
  }
}

.input__wrap {
  @extend .relative;
  &.has-icon--right {
    @extend %has-icon--right;
    input {
      @include has-icon-padding(right)
    }
  }
  &.has-icon--left {
    @extend %has-icon--left;
    input {
      @include has-icon-padding(left)
    }
  }
}

.input__icon {
  @extend .absolute;
  top: 0;
  padding: ($base-h-padding * .75 + px ) ($base-h-padding+px);
  font-size: 1rem;
  z-index: 1;
  color: $input-icon-color;
}

//.input__group {
//  > [class^="column--"] {
//    > * {
//      @include erase-radius();
//      width: 100%;
//    }
//    @media (min-width: 769px) {
//      padding: 0;
//      &:first-child {
//        padding-left: $base-h-padding+px;
//        > * {
//          @include radius-left();
//        }
//      }
//      &:last-child {
//        padding-right: $base-h-padding+px;
//        > * {
//          @include radius-right();
//        }
//      }
//    }
//  }
//}

.input__group {
  > [class^="column--"] {
    > * {
      @include erase-radius();
      width: 100%;
    }
    @media (min-width: 1px) and (max-width: $brkpoint-md) {
      &:first-child {
        > * {
          @include radius-top();
        }
      }
      &:last-child {
        > * {
          @include radius-bottom();
        }
      }
    }
    @media (min-width: $brkpoint-md + 1px) {
      padding: 0;
      &:first-child {
        padding-left: $base-h-padding+px;
        > * {
          @include radius-left();
        }
      }
      &:last-child {
        padding-right: $base-h-padding+px;
        > * {
          @include radius-right();
        }
      }
    }
  }
  .has-error & {
    > [class^="column--"] {
      &:last-child {
        > .button {
          border-color: $color-error;
          border-bottom-color: lighten($color-error, 20%);
          background-color: $color-error;
          color: $white;
          .juicon {
            color: $white;
          }
          @media (min-width: $brkpoint-md+1px) {
            border-left-color: lighten($color-error, 20%);
          }
        }
        > * {
          @media (min-width: 1px) and (max-width: $brkpoint-md) {
            @include erase-radius();
          }
        }
      }
    }
  }
}